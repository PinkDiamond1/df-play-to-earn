/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RevealMarket, RevealMarketInterface } from "../RevealMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "revealer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "RevealBountyAnnounced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[9]",
        name: "_input",
        type: "uint256[9]",
      },
    ],
    name: "createRevealBounty",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifierAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifierAddress",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114fe806100206000396000f3fe6080604052600436106100555760003560e01c8063357f90b91461005a5780635437988d14610076578063715018a61461009f5780638da5cb5b146100b6578063c4d66de8146100e1578063f2fde38b1461010a575b600080fd5b610074600480360381019061006f9190610d56565b610133565b005b34801561008257600080fd5b5061009d60048036038101906100989190610d2d565b61030e565b005b3480156100ab57600080fd5b506100b46103ce565b005b3480156100c257600080fd5b506100cb61050b565b6040516100d8919061104c565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610d2d565b610535565b005b34801561011657600080fd5b50610131600480360381019061012c9190610d2d565b610658565b005b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d20293f0858585856040518563ffffffff1660e01b81526004016101949493929190611090565b602060405180830381600087803b1580156101ae57600080fd5b505af19250505080156101df57506040513d601f19601f820116820180604052508101906101dc9190610dbb565b60015b610250573d806000811461020f576040519150601f19603f3d011682016040523d82523d6000602084013e610214565b606091505b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790611157565b60405180910390fd5b80610290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028790611137565b60405180910390fd5b507f23ef5a9e22150fb6c8dd4b7ebb66a91a2432e439a0b02a2645dbf29a7c490fe633826000600981106102ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151604051610300929190611067565b60405180910390a150505050565b610316610804565b73ffffffffffffffffffffffffffffffffffffffff1661033461050b565b73ffffffffffffffffffffffffffffffffffffffff161461038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611117565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103d6610804565b73ffffffffffffffffffffffffffffffffffffffff166103f461050b565b73ffffffffffffffffffffffffffffffffffffffff161461044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190611117565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff168061055b575060008054906101000a900460ff16155b61059a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610591906110f7565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105ea576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105f261080c565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106545760008060016101000a81548160ff0219169083151502179055505b5050565b610660610804565b73ffffffffffffffffffffffffffffffffffffffff1661067e61050b565b73ffffffffffffffffffffffffffffffffffffffff16146106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb90611117565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b906110d7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600060019054906101000a900460ff1680610832575060008054906101000a900460ff16155b610871576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610868906110f7565b60405180910390fd5b60008060019054906101000a900460ff1615905080156108c1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108c96108f5565b6108d16109ce565b80156108f25760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061091b575060008054906101000a900460ff16155b61095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906110f7565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109aa576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156109cb5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806109f4575060008054906101000a900460ff16155b610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a906110f7565b60405180910390fd5b60008060019054906101000a900460ff161590508015610a83576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610a8d610804565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610b4d5760008060016101000a81548160ff0219169083151502179055505b50565b6000610b63610b5e8461119c565b611177565b90508082856040860282011115610b7957600080fd5b60005b85811015610ba95781610b8f8882610cb5565b845260208401935060408301925050600181019050610b7c565b5050509392505050565b6000610bc6610bc1846111c2565b611177565b90508082856020860282011115610bdc57600080fd5b60005b85811015610c0c5781610bf28882610d18565b845260208401935060208301925050600181019050610bdf565b5050509392505050565b6000610c29610c24846111e8565b611177565b90508082856020860282011115610c3f57600080fd5b60005b85811015610c6f5781610c558882610d18565b845260208401935060208301925050600181019050610c42565b5050509392505050565b600081359050610c8881611483565b92915050565b600082601f830112610c9f57600080fd5b6002610cac848285610b50565b91505092915050565b600082601f830112610cc657600080fd5b6002610cd3848285610bb3565b91505092915050565b600082601f830112610ced57600080fd5b6009610cfa848285610c16565b91505092915050565b600081519050610d128161149a565b92915050565b600081359050610d27816114b1565b92915050565b600060208284031215610d3f57600080fd5b6000610d4d84828501610c79565b91505092915050565b6000806000806102208587031215610d6d57600080fd5b6000610d7b87828801610cb5565b9450506040610d8c87828801610c8e565b93505060c0610d9d87828801610cb5565b925050610100610daf87828801610cdc565b91505092959194509250565b600060208284031215610dcd57600080fd5b6000610ddb84828501610d03565b91505092915050565b6000610df08383610e7a565b60408301905092915050565b6000610e08838361102e565b60208301905092915050565b610e1d816112b1565b82525050565b610e2c8161122c565b610e368184611274565b9250610e418261120e565b8060005b83811015610e72578151610e598782610de4565b9650610e648361124d565b925050600181019050610e45565b505050505050565b610e8381611237565b610e8d818461127f565b9250610e9882611218565b8060005b83811015610ec9578151610eb08782610dfc565b9650610ebb8361125a565b925050600181019050610e9c565b505050505050565b610eda81611237565b610ee4818461128a565b9250610eef82611218565b8060005b83811015610f20578151610f078782610dfc565b9650610f128361125a565b925050600181019050610ef3565b505050505050565b610f3181611242565b610f3b8184611295565b9250610f4682611222565b8060005b83811015610f77578151610f5e8782610dfc565b9650610f6983611267565b925050600181019050610f4a565b505050505050565b6000610f8c6026836112a0565b9150610f978261136a565b604082019050919050565b6000610faf602e836112a0565b9150610fba826113b9565b604082019050919050565b6000610fd26020836112a0565b9150610fdd82611408565b602082019050919050565b6000610ff56014836112a0565b915061100082611431565b602082019050919050565b60006110186018836112a0565b91506110238261145a565b602082019050919050565b611037816112ef565b82525050565b611046816112ef565b82525050565b60006020820190506110616000830184610e14565b92915050565b600060408201905061107c6000830185610e14565b611089602083018461103d565b9392505050565b6000610220820190506110a66000830187610ed1565b6110b36040830186610e23565b6110c060c0830185610ed1565b6110ce610100830184610f28565b95945050505050565b600060208201905081810360008301526110f081610f7f565b9050919050565b6000602082019050818103600083015261111081610fa2565b9050919050565b6000602082019050818103600083015261113081610fc5565b9050919050565b6000602082019050818103600083015261115081610fe8565b9050919050565b600060208201905081810360008301526111708161100b565b9050919050565b6000611181611192565b905061118d82826112f9565b919050565b6000604051905090565b600067ffffffffffffffff8211156111b7576111b661132a565b5b602082029050919050565b600067ffffffffffffffff8211156111dd576111dc61132a565b5b602082029050919050565b600067ffffffffffffffff8211156112035761120261132a565b5b602082029050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060099050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60006112bc826112cf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61130282611359565b810181811067ffffffffffffffff821117156113215761132061132a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642072657665616c2070726f6f66000000000000000000000000600082015250565b7f76657269667952657665616c50726f6f66206661696c65640000000000000000600082015250565b61148c816112b1565b811461149757600080fd5b50565b6114a3816112c3565b81146114ae57600080fd5b50565b6114ba816112ef565b81146114c557600080fd5b5056fea26469706673582212208e30d261ca45e6233c4780806e9ddbb7fa176581e28a045de0f0ac228458d5bd64736f6c63430008040033";

export class RevealMarket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevealMarket> {
    return super.deploy(overrides || {}) as Promise<RevealMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RevealMarket {
    return super.attach(address) as RevealMarket;
  }
  connect(signer: Signer): RevealMarket__factory {
    return super.connect(signer) as RevealMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevealMarketInterface {
    return new utils.Interface(_abi) as RevealMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevealMarket {
    return new Contract(address, _abi, signerOrProvider) as RevealMarket;
  }
}
