/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RevealMarket, RevealMarketInterface } from "../RevealMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f25806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063a41368621461008f578063cfae3217146100ab578063f2fde38b146100c9578063f62d1888146100e5575b600080fd5b61006f610101565b005b61007961023e565b6040516100869190610bbc565b60405180910390f35b6100a960048036038101906100a49190610aca565b610268565b005b6100b36102fe565b6040516100c09190610bd7565b60405180910390f35b6100e360048036038101906100de9190610aa1565b610390565b005b6100ff60048036038101906100fa9190610aca565b61053c565b005b610109610635565b73ffffffffffffffffffffffffffffffffffffffff1661012761023e565b73ffffffffffffffffffffffffffffffffffffffff161461017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017490610c39565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610270610635565b73ffffffffffffffffffffffffffffffffffffffff1661028e61023e565b73ffffffffffffffffffffffffffffffffffffffff16146102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db90610c39565b60405180910390fd5b80606590805190602001906102fa929190610981565b5050565b60606065805461030d90610d3f565b80601f016020809104026020016040519081016040528092919081815260200182805461033990610d3f565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b5050505050905090565b610398610635565b73ffffffffffffffffffffffffffffffffffffffff166103b661023e565b73ffffffffffffffffffffffffffffffffffffffff161461040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610c39565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390610bf9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900460ff1680610562575060008054906101000a900460ff16155b6105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c19565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105f1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105f961063d565b816065908051906020019061060f929190610981565b5080156106315760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b600060019054906101000a900460ff1680610663575060008054906101000a900460ff16155b6106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990610c19565b60405180910390fd5b60008060019054906101000a900460ff1615905080156106f2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6106fa610726565b6107026107ff565b80156107235760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061074c575060008054906101000a900460ff16155b61078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290610c19565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107db576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156107fc5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610825575060008054906101000a900460ff16155b610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b90610c19565b60405180910390fd5b60008060019054906101000a900460ff1615905080156108b4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60006108be610635565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350801561097e5760008060016101000a81548160ff0219169083151502179055505b50565b82805461098d90610d3f565b90600052602060002090601f0160209004810192826109af57600085556109f6565b82601f106109c857805160ff19168380011785556109f6565b828001600101855582156109f6579182015b828111156109f55782518255916020019190600101906109da565b5b509050610a039190610a07565b5090565b5b80821115610a20576000816000905550600101610a08565b5090565b6000610a37610a3284610c7e565b610c59565b905082815260208101848484011115610a4f57600080fd5b610a5a848285610cfd565b509392505050565b600081359050610a7181610ed8565b92915050565b600082601f830112610a8857600080fd5b8135610a98848260208601610a24565b91505092915050565b600060208284031215610ab357600080fd5b6000610ac184828501610a62565b91505092915050565b600060208284031215610adc57600080fd5b600082013567ffffffffffffffff811115610af657600080fd5b610b0284828501610a77565b91505092915050565b610b1481610ccb565b82525050565b6000610b2582610caf565b610b2f8185610cba565b9350610b3f818560208601610d0c565b610b4881610e00565b840191505092915050565b6000610b60602683610cba565b9150610b6b82610e11565b604082019050919050565b6000610b83602e83610cba565b9150610b8e82610e60565b604082019050919050565b6000610ba6602083610cba565b9150610bb182610eaf565b602082019050919050565b6000602082019050610bd16000830184610b0b565b92915050565b60006020820190508181036000830152610bf18184610b1a565b905092915050565b60006020820190508181036000830152610c1281610b53565b9050919050565b60006020820190508181036000830152610c3281610b76565b9050919050565b60006020820190508181036000830152610c5281610b99565b9050919050565b6000610c63610c74565b9050610c6f8282610d71565b919050565b6000604051905090565b600067ffffffffffffffff821115610c9957610c98610dd1565b5b610ca282610e00565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610cd682610cdd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610d2a578082015181840152602081019050610d0f565b83811115610d39576000848401525b50505050565b60006002820490506001821680610d5757607f821691505b60208210811415610d6b57610d6a610da2565b5b50919050565b610d7a82610e00565b810181811067ffffffffffffffff82111715610d9957610d98610dd1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610ee181610ccb565b8114610eec57600080fd5b5056fea2646970667358221220df905f2f50d7fb062d1479ffc21e2737d2b73fcd36f00d961f805113036b23a664736f6c63430008040033";

export class RevealMarket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevealMarket> {
    return super.deploy(overrides || {}) as Promise<RevealMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RevealMarket {
    return super.attach(address) as RevealMarket;
  }
  connect(signer: Signer): RevealMarket__factory {
    return super.connect(signer) as RevealMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevealMarketInterface {
    return new utils.Interface(_abi) as RevealMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevealMarket {
    return new Contract(address, _abi, signerOrProvider) as RevealMarket;
  }
}
