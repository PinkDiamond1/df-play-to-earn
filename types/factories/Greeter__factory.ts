/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611220806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063a41368621461008f578063cfae3217146100ab578063f2fde38b146100c9578063f62d1888146100e5575b600080fd5b61006f610101565b005b61007961023e565b6040516100869190610def565b60405180910390f35b6100a960048036038101906100a49190610cfd565b610268565b005b6100b36103ab565b6040516100c09190610e0a565b60405180910390f35b6100e360048036038101906100de9190610cd4565b61043d565b005b6100ff60048036038101906100fa9190610cfd565b6105e9565b005b610109610704565b73ffffffffffffffffffffffffffffffffffffffff1661012761023e565b73ffffffffffffffffffffffffffffffffffffffff161461017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017490610eef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610270610704565b73ffffffffffffffffffffffffffffffffffffffff1661028e61023e565b73ffffffffffffffffffffffffffffffffffffffff16146102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db90610eef565b60405180910390fd5b6103916040518060600160405280602381526020016111a6602391396065805461030d90610ff5565b80601f016020809104026020016040519081016040528092919081815260200182805461033990610ff5565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b50505050508361070c565b80606590805190602001906103a7929190610bb4565b5050565b6060606580546103ba90610ff5565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690610ff5565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b5050505050905090565b610445610704565b73ffffffffffffffffffffffffffffffffffffffff1661046361023e565b73ffffffffffffffffffffffffffffffffffffffff16146104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610eef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052090610eaf565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900460ff168061060f575060008054906101000a900460ff16155b61064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590610ecf565b60405180910390fd5b60008060019054906101000a900460ff16159050801561069e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6106a66107ab565b6106c86040518060600160405280602281526020016111c96022913983610894565b81606590805190602001906106de929190610bb4565b5080156107005760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b6107a683838360405160240161072493929190610e63565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610930565b505050565b600060019054906101000a900460ff16806107d1575060008054906101000a900460ff16155b610810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080790610ecf565b60405180910390fd5b60008060019054906101000a900460ff161590508015610860576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610868610959565b610870610a32565b80156108915760008060016101000a81548160ff0219169083151502179055505b50565b61092c82826040516024016108aa929190610e2c565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610930565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600060019054906101000a900460ff168061097f575060008054906101000a900460ff16155b6109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590610ecf565b60405180910390fd5b60008060019054906101000a900460ff161590508015610a0e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610a2f5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610a58575060008054906101000a900460ff16155b610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e90610ecf565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ae7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610af1610704565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610bb15760008060016101000a81548160ff0219169083151502179055505b50565b828054610bc090610ff5565b90600052602060002090601f016020900481019282610be25760008555610c29565b82601f10610bfb57805160ff1916838001178555610c29565b82800160010185558215610c29579182015b82811115610c28578251825591602001919060010190610c0d565b5b509050610c369190610c3a565b5090565b5b80821115610c53576000816000905550600101610c3b565b5090565b6000610c6a610c6584610f34565b610f0f565b905082815260208101848484011115610c8257600080fd5b610c8d848285610fb3565b509392505050565b600081359050610ca48161118e565b92915050565b600082601f830112610cbb57600080fd5b8135610ccb848260208601610c57565b91505092915050565b600060208284031215610ce657600080fd5b6000610cf484828501610c95565b91505092915050565b600060208284031215610d0f57600080fd5b600082013567ffffffffffffffff811115610d2957600080fd5b610d3584828501610caa565b91505092915050565b610d4781610f81565b82525050565b6000610d5882610f65565b610d628185610f70565b9350610d72818560208601610fc2565b610d7b816110b6565b840191505092915050565b6000610d93602683610f70565b9150610d9e826110c7565b604082019050919050565b6000610db6602e83610f70565b9150610dc182611116565b604082019050919050565b6000610dd9602083610f70565b9150610de482611165565b602082019050919050565b6000602082019050610e046000830184610d3e565b92915050565b60006020820190508181036000830152610e248184610d4d565b905092915050565b60006040820190508181036000830152610e468185610d4d565b90508181036020830152610e5a8184610d4d565b90509392505050565b60006060820190508181036000830152610e7d8186610d4d565b90508181036020830152610e918185610d4d565b90508181036040830152610ea58184610d4d565b9050949350505050565b60006020820190508181036000830152610ec881610d86565b9050919050565b60006020820190508181036000830152610ee881610da9565b9050919050565b60006020820190508181036000830152610f0881610dcc565b9050919050565b6000610f19610f2a565b9050610f258282611027565b919050565b6000604051905090565b600067ffffffffffffffff821115610f4f57610f4e611087565b5b610f58826110b6565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610f8c82610f93565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610fe0578082015181840152602081019050610fc5565b83811115610fef576000848401525b50505050565b6000600282049050600182168061100d57607f821691505b6020821081141561102157611020611058565b5b50919050565b611030826110b6565b810181811067ffffffffffffffff8211171561104f5761104e611087565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61119781610f81565b81146111a257600080fd5b5056fe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274465706c6f79696e67206120477265657465722077697468206772656574696e673aa2646970667358221220e5f5bc158bf9bbc79d555fa72a481e50932fa102fa1f59b75a13399fd133c0fa64736f6c63430008040033";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
